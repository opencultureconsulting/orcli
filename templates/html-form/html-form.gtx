> <!DOCTYPE html>
> <html lang="en">
> <head>
>   <meta charset="UTF-8">
>   <title>{{ full_name }} {{ version }}</title>
>   <link rel="stylesheet" href="style.css">
>   <script src="script.js"></script>
> </head>
> <body>

# === Header

> <h1>{{ full_name }} {{ version }}</h1>
>
> <p>{{ help }}</p>

# === Commands

if commands.any?
  > <h2>Commands</h2>
  > <nav>
  >   <ul>
  commands.sort_by(&:name).each do |command|
    >     <li><a href="{{ command.full_name }}.html">{{ command.name }}</a>{{ ' - ' + command.help.split("\n").first if command.help }}</li>
    if command.deep_commands.any?
      >     <ul>
      command.deep_commands.sort_by(&:name).each do |subcommand|
        >       <li><a href="{{ subcommand.full_name }}.html">{{ subcommand.name }}</a>{{ ' - ' + subcommand.help.split("\n").first if subcommand.help }}</li>
      end
      >     </ul>
    end
  end
  >   </ul>
  > </nav>
end

# === Usage

if args.any? || flags.any?
  > <h2>Usage</h2>
  > <form action="#" method="get">

  # === Arguments
  
  if args.any?
    >   <fieldset>
    >     <legend>Arguments</legend>
    >     <table>
    args.each do |arg|
      >       <tr>
      >         <td><label for="{{ arg.name }}">{{ arg.name.upcase }}</label></td>
      >         <td>
      if arg.allowed
        if arg.repeatable
          >           <select id="{{ arg.name }}" name="{{ arg.name }}" multiple repeatable{{ ' required' if arg.required }}>
          arg.allowed.each do |val|
            >             <option value="{{ val.gsub('\\\\\\"','&#92;&quot;').gsub('\"','&quot;') }}"{{ ' selected' if arg.default == val }}>{{ val }}</option>
          end
          >           </select>
        else
          >           <select id="{{ arg.name }}" name="{{ arg.name }}"{{ ' required' if arg.required }}>
          arg.allowed.each do |val|
            >             <option value="{{ val.gsub('\\\\\\"','&#92;&quot;').gsub('\"','&quot;') }}"{{ ' selected' if arg.default == val }}>{{ val }}</option>
          end
          >           </select>
        end
      else
        >           <input type="text" id="{{ arg.name }}" name="{{ arg.name }}" placeholder="{{ arg.default.gsub('\\\\\\"','&#92;&quot;').gsub('\"','&quot;') if arg.default }}"{{ ' required' if arg.required }}{{ ' repeatable' if arg.repeatable }}>
      end
      >         </td>
      >         <td>
      if arg.help || arg.repeatable || arg.required
        >           <code>{{ arg.help if arg.help }}{{ '<br>(repeatable)' if arg.repeatable }}{{ '<br>(required)' if arg.required }}</code>
      end
      >         </td>
      >       </tr>
    end
    >     </table>
    >   </fieldset>
  end

  # === Options

  if flags.any?
    >   <fieldset>
    >     <legend>Options</legend>
    >     <table>
    flags.each do |flag|
      >       <tr>
      if flag.allowed
        if flag.repeatable
          >         <td><label for="{{ flag.name }}">{{ flag.usage_string }}</label></td>
          >         <td>
          >           <select id="{{ flag.name }}" name="{{ flag.name }}" multiple repeatable{{ ' required' if flag.required }}>
          flag.allowed.each do |val|
            >             <option value="{{ val.gsub('\\\\\\"','&#92;&quot;').gsub('\"','&quot;') }}"{{ ' selected' if flag.default == val }}>{{ val }}</option>
          end
          >           </select>
          >         </td>
        else
          >         <td><label for="{{ flag.name }}">{{ flag.usage_string }}</label></td>
          >         <td>
          >           <select id="{{ flag.name }}" name="{{ flag.name }}"{{ ' required' if flag.required }}>
          flag.allowed.each do |val|
            >             <option value="{{ val.gsub('\\\\\\"','&#92;&quot;').gsub('\"','&quot;') }}"{{ ' selected' if flag.default == val }}>{{ val }}</option>
          end
          >           </select>
          >         </td>
        end
      elsif flag.arg
        >         <td><label for="{{ flag.name }}">{{ flag.usage_string }}</label></td>
        >         <td>
        >           <input type="text" id="{{ flag.name }}" name="{{ flag.name }}" placeholder="{{ flag.default.gsub('\\\\\\"','&#92;&quot;').gsub('\"','&quot;') if flag.default}}"{{ ' required' if flag.required }}{{ ' repeatable' if flag.repeatable }}>
        >         </td>
      else
        >         <td><label for="{{ flag.name }}">{{ flag.usage_string }}</label></td>
        >         <td>
        >           <input type="checkbox" id="{{ flag.name }}" name="{{ flag.name }}">
        >         </td>
      end
      >         <td>
      if flag.help || flag.conflicts || flag.repeatable || flag.required
        >           <code>{{ flag.help if flag.help }}{{ '<br>(repeatable)' if flag.repeatable }}{{ '<br>(required)' if flag.required }}{{ '<br>conflicts: ' + flag.conflicts.join(', ') if flag.conflicts }}</code>
      end
      >         </td>
      >       </tr>
    end
    >     </table>
    >   </fieldset>
  end

  # === Environment Variables

  if visible_environment_variables.any?
    >   <fieldset>
    >     <legend>Environment Variables</legend>
    >     <table>
    visible_environment_variables.each do |env|
      >       <tr>
      >         <td><label for="{{ env.name }}">{{ env.name.upcase }}</label></td>
      >         <td>
      >           <input type="text" id="{{ env.name }}" name="{{ env.name }}" placeholder="{{ env.default }}">
      >         </td>
      >         <td>
      if env.help
        >           <code>{{ env.help }}</code>
      end
      >         </td>
      >       </tr>
    end
    >     </table>
    >   </fieldset>
  end

  # === Parent Environment Variables (recursive)

  def show_parent_envvars(cmd, level = 1)
    if cmd && cmd.respond_to?(:options) && cmd.options["environment_variables"] && cmd.options["environment_variables"].any?
      %Q{
        <fieldset>
          <legend>Parent Environment Variables</legend>
          <table>
            #{cmd.options["environment_variables"].map do |env|
              %Q{
                <tr>
                  <td><label for="parent-#{env["name"]}">#{env["name"].upcase}</label></td>
                  <td><input type="text" id="parent-#{env["name"]}" name="parent_#{env["name"]}" placeholder="#{env["default"]}"></td>
                  <td>#{env["help"] ? "<code>#{env["help"]}</code>" : ""}</td>
                </tr>
              }
            end.join}
          </table>
        </fieldset>
      }
    else
      ""
    end +
    (cmd.respond_to?(:parent_command) && cmd.parent_command ? show_parent_envvars(cmd.parent_command, level + 1) : "")
  end

  if parent_command
    > {{ show_parent_envvars(parent_command) }}
  end

  > </form>
end

# === Examples

if examples
  > <h2>Examples</h2>
  > <div class="examples-block">
  examples.each do |example|
    > <code>{{ example.gsub('\\\\\\\\', '\\').gsub('\\$', '$') }}</code>
  end
  > </div>
end

# === Dependencies

if dependencies.any?
  > <h2>Dependencies</h2>
  > <ul>
  dependencies.each do |dependency|
    dependency.commands.each do |command|
    > <li>{{ dependency.commands.join ', ' }}: {{ dependency.help }}</li>
    end
  end
  > </ul>
end

# === Footer

if footer
  > <hr>
  > <footer>
  >   Code: <a href="{{ footer }}">{{ footer }}</a>
  > </footer>
end

> </body>
> </html>
> </html>
